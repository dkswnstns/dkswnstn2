
# 튜플 : 리스트와 거의 유사 [] -> ( )
    #단점 : 튜플은 값을 바꿀수가 없다
    # 튜플명 = (값1,값2,값3 ~~ 등)

#71 # my_variable 이름의 비어있는 튜플을 만들라
my_variable=( ) #튜플 생성

# 72 #영화 제목을 movie_rank 이름의 튜플에 저장하라
movie_rank=("닥터스트레인지","스플릿","럭스")

# 문제 73 # 숫자 1 이 저장된 튜플을 생성하라
my_tuple=(1)
print(type(my_tuple)) # int정수 # 튜플이 아니다

#문제 74 # 오류가 발생하는 원인을 설명하라
# t =(1,2,3)
# t[0]= 'a' # 0번째 숫서의 값을 a로 변ㅇ환
    #오류발생 이유 :튜플은 값을 바꿀수가 없다

#문제 75 # 아래와 같이 t에는 1,2,3,4 데이터가 바인딩되어 있다 . t가 바인딩하는 데이터 타입은 무엇인가?
t=1,2,3,4
print(type(t)) # t의 타입은 튜플

#문제 76 #변수  t에는 아래와 같은 값이 저장되어 있다.변수 t가 ('A','b','c')튜플을 가리키도록 수정 하라.
# t = ('a','b','c')
#t = 'A'

# 77#  다음 튜플을 리스트로 변환하라
interest= ("삼성전자","LG전자","SK Hynix")
print(tuple(interest))
        #tuple(리스트명) : 튜플로 변환

#문제 79 # 다음 코드의 실행 결과를 예상하라
temp=('apple','banana','cake')
a,b,c=temp
print(a,b,c)
    #팩킹[묶음] : 리시트,튜플,딕셔너리
    #언팽킹[묶음x] : 데이터 한개[변수]

# 80 # 1부터 99 까지의 정수 중 짝수만 저장된 튜플을 생성하라
data= tuple(range(2,100,2))
print(data)
        # range( 시작값, 끝값,증가단위)

# 81 # 별 표현식 #star expression # 좌츤ㄱ 8개의 값음 vaild_score 변수에 바인딩하여
scores=[8.8,8.9,8.7,9.2,9.3,9.7,9.9,9.5,7.8,9.4]
print(*scores) # 리스트 제거
*scores,_,_=scores #뒤에서 2개 생략
print(scores)
#82 # 우측 8개 값을 vaild_score 변수에 바인딩하여라
scores=[8.8,8.9,8.7,9.2,9.3,9.7,9.9,9.5,7.8,9.4]
_,_,*scores= scores # 앞에서 2개 생략
print(scores)
# 83 가운데 8개만 vaild_score 변수에 바인딩하여라
scores=[8.8,8.9,8.7,9.2,9.3,9.7,9.9,9.5,7.8,9.4]
_,*scores,_=scores # 앞뒤로 1개 생략
print(scores)

#문제 84 : temp 이름이 비어있는 딕셔너리를 만드라
temp={ }

#85 : 다음  아이스크림 이름과 희망 가격을 딕셔너리로 구성하라
아이스크림={"메로나":1000,"폴라뽀":1200,"빵빠레":1800}
# 딕셔너리={          "키":값 ,"키2":"값2","키3":"값3"}
print(아이스크림)

# 문제 86 : 085 번의 딕셔너리에 아래 아이스크림 가격정보를 추가하여라
아이스크림={"메로나":1000,"폴라뽀":1200,"빵빠레":1800}
아이스크림["죠스바"] = 1200
아이스크림["월드콘"] = 1500
    #딕셔너리에 항목 추가 방법 : 딕셔너리명["키"] = 값
print(아이스크림)

#87 # 다음 딕셔너리를ㄹ 사용하ㅕㅇ 메로나 가격을 출력하라
아이스크림={'메로나':1000,
       '폴라뽀':1200,
       '빵빠레':1800,
       '죠스바':1200,
       '월드콘':1500}
print("메로나 가격:",아이스크림["메로나"])
    # 딕셔너리에 값을 출력 방법 : 딕ㄷ셔너리명 [키] => 해당하는 키의 값이 출력 된다

# 88 # 다음 딕셔너리에서 메로나의 가격을 1300으로 수정하라.
아이스크림={'메로나':1000,
       '폴라뽀':1200,
       '빵빠레':1800,
       '죠스바':1200,
       '월드콘':1500}

아이스크림["메로나"] = 1300 # 리스트와 딕셔너리는 수정 가능
print("메로나 가격:",아이스크림["메로나"])

#문제 89 # 다음 딕셔너리에서 메로나를 삭제하라
아이스크림={'메로나':1000,
       '폴라뽀':1200,
       '빵빠레':1800,
       '죠스바':1200,
       '월드콘':1500}

del 아이스크림["메로나"] # del 딕셔너리명["키"]=>해당하는 키의 값을 상제
print(아이스크림)

#문제 90 # 다음 코드ㅔ에서 에러가 발생한 원인을 설명하라
#아이스크림={'메로나':1000,'폴라뽀':1200,'빵빠레':1800,'죠스바':1200,'월드콘':1500}
#아이스크림['누가바']
        # 오류발생 이유 : 딕셔너리에 '누가바'라느 키가 없어서 오류 발생

#문제 91 아이스크림 이름을 키값으로,(가격,재고) 리스트를 딕셔너리의 값으로
        #딕셔너리 값에 리스트 넣을수 있다
아이스크림={"메로나":[300,20],"비비빅":[400,3],"빵빠레":[250,100]}
#딕셔너리명= {"키";리스트            ,"키2":"리스트2":    ,   "키3":"리스트3"}
print("메로나의 가격:",아이스크림["메로나"][0])       # 해당 하는 키의 리스트내 0번

# 문제 93 : inventory 딕셔너리에서 메로나의 재고를 화면에 출력하라
아이스크림={"메로나":[300,20],"비비빅":[400,3],"빵빠레":[250,100]}
print("메로나의 재고:",아이스크림["메로나"][1])   #해당 하는 키 의 리스트내 1번

#문제 94 : inventory 딕셔너리에 아래 데이터를 추가하라
아이스크림={"메로나":[300,20],"비비빅":[400,3],"빵빠레":[250,100]}
아이스크림["월드콘"] = [500,7] # 해당 새로운 키의 리스트를 추가
print(아이스크림)

#문제 95 : 다음 딕셔너리로 부터 key 값으로만 구성된 리스트를 생성하라
아이스크림={'탱크보이':1200,'폴라포':1200,'빵빠레':1800,'월드콘':1500,'메로나':1000}
아이스크림이름 = list(아이스크림.keys()) # keys() 함수 사용시 딕셔너리내 ㅏ모든 키를 가져오기
print(아이스크림이름)

#문제 96: 다음의 딕셔너리에서 value 값으로만 구성된 리스트를 생성하라
아이스크림={'탱크보이':1200,'폴라포':1200,'빵빠레':1800,'월드콘':1500,'메로나':1000}
아이스크림가격=list(아이스크림.values()) # valurs() 함수 사용시 딕셔너리내 모든 값을 가져오기
print(아이스크림가격)

#문제 97 : icecream 딕셔너리에서 아이스크림 판매 금액의 총합을 출력하라.
아이스크림={'탱크보이':1200,'폴라포':1200,'빵빠레':1800,'월드콘':1500,'메로나':1000}
print("아이스크림의 총합계:",sum(아이스크림.values()))
                    # sum (리스트) : 모든 항목을의 함계

#문제 98 : 아래의 new_product 딕셔너리를 다음 icecream 딕셔너리에 추가하라
아이스크림={'탱크보이':1200,'폴라포':1200,'빵빠레':1800,'월드콘':1500,'메로나':1000}
새로운아이스크림={'팥빙수':2700,'아맛나':1000}

아이스크림.update(새로운아이스크림) # 딕셔너리명1.update(딕셔너리명2)  :  딕셔너리명 1 에 딕셔너리명 2 추가
print(아이스크림)

#문제 99: 아래 두 개의 튜플을 하나의 딕셔너리로 변환하라 . keys를 키로,value를 값으로 result 이름의 딕셔너리로 저장한다
keys=("apple","pear","peach")
vals=(300,250,400)
    # keys 튜플과 vals 튜플을 딕셔너리로 변환
딕셔너리 = dict(zip(keys,vals))
        # dict(zip(튜플1,튜플2) )
        #dict(zip("키","값") )
print(딕셔너리)

#문제 100 # date와 close_price 두개의 리스트를 close_table 이름의 딕셔너리로 생성하라
date=['09/05','09/07','09/08/','09/09']
closs_price=[10500,10300,10100,10800,11000]
        #date 리스트와 closs_price 리스트 을 딕셔너리로 변환
딕셔너리 = dict(zip(date,closs_price))
print(딕셔너리)